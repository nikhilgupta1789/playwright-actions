name: Playwright Tests with Allure

on:
  workflow_dispatch:

jobs:
  test:
    name: Run Playwright tests (${{ matrix.tag }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: [e2e, smoke]
    env:
      ALLURE_RESULTS: allure-results
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests with tag ${{ matrix.tag }}
        run: |
          npx playwright test --grep "@${{ matrix.tag }}" --reporter=line

      - name: Upload Allure results artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.tag }}
          path: ${{ env.ALLURE_RESULTS }}

  allure-report:
    name: Generate & Publish Allure Report
    needs: test
    runs-on: ubuntu-latest
    env:
      ALLURE_RESULTS: allure-results
      ALLURE_HISTORY: allure-history
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Allure results for all tags
        uses: actions/download-artifact@v4
        with:
          path: downloaded-results
          
      - name: Debug: List downloaded-results contents
        run: ls -lR downloaded-results || echo "No artifacts downloaded"     

      - name: Merge Allure results
        run: |
          mkdir -p $ALLURE_RESULTS
          find downloaded-results -type d -name "allure-results-*" -exec cp -r {}/* $ALLURE_RESULTS/ \;

      - name: Checkout gh-pages branch for history
        run: |
          git fetch origin gh-pages:gh-pages || true
          git worktree add gh-pages gh-pages
        continue-on-error: true

      - name: Copy Allure history (if exists)
        run: |
          if [ -d "gh-pages/history" ]; then
            mkdir -p $ALLURE_RESULTS/history
            cp -r gh-pages/history/* $ALLURE_RESULTS/history/
          fi

      - name: Generate Allure report
        run: |
          npx allure generate $ALLURE_RESULTS -o allure-report --clean

      - name: Copy history to report
        run: |
          mkdir -p allure-report/history
          if [ -d "$ALLURE_RESULTS/history" ]; then
            cp -r $ALLURE_RESULTS/history/* allure-report/history/
          fi

      - name: Deploy Allure report to gh-pages branch
        run: |
          cp -r allure-report/* gh-pages/
          git -C gh-pages add .
          git -C gh-pages config user.email "github-actions[bot]@users.noreply.github.com"
          git -C gh-pages config user.name "github-actions[bot]"
          git -C gh-pages commit -m "Update Allure report [skip ci]" || echo "No changes to commit"
          git -C gh-pages push origin gh-pages

      - name: Cleanup worktree
        if: always()
        run: |
          git worktree remove gh-pages --force
